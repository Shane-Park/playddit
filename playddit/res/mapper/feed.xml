<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
	
	<sqlMap namespace = "feed">
	
	<select id= "getOneFeed" resultClass="feedVO" parameterClass="feedVO">
		select feed_no as feedno, b.user_id as id,
        b.user_pic as profile,
        feed_pic as feedpic,
        b.user_nickname as nickname,
        c.class_num ||' - '|| c.class_room as classname,
        (select count(*) 
           from likes 
          where user_id = #id#
            and feed_no = a.feed_no) as islike,
        (select count(*)
            from likes 
            where feed_no = a.feed_no) as countlike,
        (select count(*)
                   from blame
                   where feed_no = a.feed_no) as reportcount,
        (select count(*)
                        from blame
                        where feed_no = a.feed_no
                          and user_id = #id#) as isreport,
        a.feed_cont as cont,
        (select count(*)
           from feed_comment
          where feed_no = a.feed_no) as comcount,
        (CASE WHEN a.user_id = #id# THEN 'true'
                      ELSE 'false' END)as ismine
		from feed a, users b, class c
		where a.user_id = b.user_id
		and b.class_id = c.class_id
		and feed_no = #feedno#
	</select>
	
	<select id = "getFeed" resultClass ="feedVO" parameterClass="String">
	
	select a.feed_no as feedno, a.user_id as id, a.feed_cont as cont,(CASE WHEN a.user_id = #user_id# THEN 'true'
                      ELSE 'false' END)as ismine,
			nvl(b.user_pic,'default.png') as profile, 
			nvl(a.feed_pic,'none') as feedpic,
			b.user_nickname as nickname, 
			c.class_num ||' - '|| c.class_room as classname,
        (select count(*) 
         from likes 
         where user_id = #user_id#
            and feed_no = a.feed_no) as islike,
            (select count(*)
                from likes 
                where feed_no = a.feed_no) as countlike,
                (select count(*)
                   from blame
                   where feed_no = a.feed_no) as reportcount,   
                     (select count(*)
                        from blame
                        where feed_no = a.feed_no
                          and user_id = #user_id#) as isreport,
                           (select count(*)
                         	   from feed_comment
                          	   where feed_no = a.feed_no) as comcount
                   
    from feed a, users b, class c  
    where a.user_id = b.user_id 
      and b.class_id = c.class_id   
      
    order by a.feed_no desc
			
	</select>
		
	
	<select id = "getCom" resultClass="comVO" parameterClass="int">
   
	   select a.feed_com_no as comno, a.user_id as id, b.user_pic as profile,
	    		(select count(*) from feed_com_re where feed_com_no = a.feed_com_no) as repcount,
	            a.feed_com_cont as comcont, b.user_nickname as nickname,
	             to_char(a.feed_com_date,'yyyy-mm-dd hh24:mi:ss') as time
	        from feed_comment a, users b
	        where a.user_id = b.user_id
	          and feed_no = #feed_no#
       order by comno
	</select>
	
	<select id = "getComReplies" resultClass="comVO" parameterClass="int">
		select a.f_com_re_no as comno, a.user_id as id, b.user_pic as profile,
        a.f_com_re_cont as comcont, b.user_nickname as nickname,
         to_char(a.f_com_re_date,'yyyy-mm-dd hh24:mi:ss') as time
		from feed_com_re a, users b
		where a.user_id = b.user_id
		      and feed_com_no = #feed_com_no#
		order by comno
	</select>
	
	<insert id = "insertFeed" parameterClass="map">
	
	insert into feed (feed_no, user_id, feed_cont,feed_date,feed_pic)
        values(feed_no_seq.nextval, #id#, #cont#, sysdate, #feedpic#)
    	
	</insert>
	
	
	<delete id ="deleteFeed" parameterClass="int">
	
	delete from feed
		where feed_no = #feedno#
	
	</delete>
	
	<insert id ="insertLike" parameterClass="map">
	
	insert into likes(like_no, user_id, feed_no)
		values(like_no_seq.nextval,#id#,#feedno#)
	
	
	</insert>
	
	<delete id ="deleteLike" parameterClass="map">
	
	delete from likes
		where user_id = #id#
		and feed_no = #feedno#
	</delete>

	
	<update id = "modifyFeed" parameterClass="map">
	
	update feed set 
           feed_cont = #feed_cont#,
           feed_date = sysdate,
           feed_pic = #feed_pic#
           where feed_no = #feed_no#
	</update>
	
	
	<insert id ="insertComment" parameterClass="map">
	
	insert into feed_comment 
	(feed_com_no, feed_no, user_id, feed_com_cont, feed_com_date)
	values(feed_com_no_seq.nextval,#feedno#,#id#,#content#, sysdate)
	
		<selectKey keyProperty="feed_com_no" resultClass="int">
			select feed_com_no_seq.currval AS feed_com_no from dual
		</selectKey>

	</insert>
	
	<delete id ="deleteComment" parameterClass="int">
		delete from feed_comment
		where feed_com_no = #comno#
	</delete>
	
	
	
	
	
	
	</sqlMap>